`timescale 1ns / 1ps

module Data_mem(
    input           CLK,    // вход синхронизации
    input   [31:0]   A,     // 32-битный адресный вход
    input   [31:0]  WD,    // 32-битный вход данных дл€ записи
    input           WE,     // сигнал разрешени€ на запись
    output [31:0]  RD      // 31-битный выход считанных данных
);

  reg [31:0] RAM [0:255];  // создать пам€ть с 256-ю 32-битными €чейками
  
  initial $readmemb("mem.mem", RAM);

  // чтение
   assign RD = RAM[A[9:2]];     // подключить к выходу RD €чейку пам€ти по адресу A[9:2]

  // запись
  always @ (posedge CLK)  // каждый раз, когда произойдет фронт CLK
    if (WE)               // если сигнал WE == 1
      RAM[A[9:2]] <= WD;  // в €чейку по адресу A[9:2] будут записаны данные WD

endmodule
